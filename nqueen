n_queens(N, Solution) :- 
    range(1, N, Ns),
    permute(Ns, Solution),
    safe(Solution).

% Generate list from 1 to N
range(N, N, [N]).
range(I, N, [I|T]) :- I < N, I1 is I+1, range(I1, N, T).

% Permute list
permute([], []).
permute(L, [H|T]) :- select(H, L, R), permute(R, T).

% Check diagonals
safe([]).
safe([Q|Others]) :- safe(Others), no_conflict(Q, Others, 1).

no_conflict(_, [], _).
no_conflict(Q, [H|T], D) :- 
    Q =\= H + D, Q =\= H - D,
    D1 is D + 1,
    no_conflict(Q, T, D1).
